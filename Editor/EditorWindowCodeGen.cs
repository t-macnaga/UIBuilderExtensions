using System.Text;

public static class EditorWindowCodeGen
{
    public static string GenerateEditorWindowCode(string className)
    {
        var sb = new StringBuilder();
        sb.AppendLine("using UnityEngine;");
        sb.AppendLine("using UnityEngine.UIElements;");
        sb.AppendLine("using UnityEditor;");
        sb.AppendLine("using UnityEditor.UIElements;");
        sb.AppendLine("");
        sb.AppendLine($"public partial class {className} : EditorWindowBase");
        sb.AppendLine("{");
        sb.AppendLine($"    [MenuItem(\"Window/{className}\")]");
        sb.AppendLine($"    static void Init()");
        sb.AppendLine("    {");
        sb.AppendLine($"        GetWindow<{className}>();");
        sb.AppendLine("    }");
        sb.AppendLine("");
        sb.AppendLine("    void OnEnable()");
        sb.AppendLine("    {");
        sb.AppendLine("        InitializeComponents();");
        sb.AppendLine("    }");
        sb.AppendLine("}");
        return sb.ToString();
    }

    public static string GenerateEditorWindowRegisterCode(string className, string treeAssetPath)
    {
        var sb = new StringBuilder();
        sb.AppendLine("//AUTOGENERATED");
        sb.AppendLine("using UnityEngine;");
        sb.AppendLine("using UnityEngine.UIElements;");
        sb.AppendLine("using UnityEditor;");
        sb.AppendLine("using UnityEditor.UIElements;");
        sb.AppendLine("");
        sb.AppendLine($"public partial class {className}");
        sb.AppendLine("{");
        sb.AppendLine($"    protected override string TreeAssetPath => \"{treeAssetPath}\";");
        sb.AppendLine("    protected override void RegisterCallbacks()");
        sb.AppendLine("    {");
        sb.AppendLine("    }");
        sb.AppendLine("}");
        return sb.ToString();
    }

    // public static string GenerateEditorWindowEventCode(string className)
    // {
    //     var sb = new StringBuilder();
    //     sb.AppendLine("using UnityEngine;");
    //     sb.AppendLine("using UnityEngine.UIElements;");
    //     sb.AppendLine("using UnityEditor;");
    //     sb.AppendLine("using UnityEditor.UIElements;");
    //     sb.AppendLine("");
    //     sb.AppendLine($"public partial class {className}");
    //     sb.AppendLine("{");
    //     sb.AppendLine("}");
    //     return sb.ToString();
    // }

    public static string GetMethodCode(string methodName, string debugLogMessage)
    {
        var sb = new StringBuilder();
        sb.AppendLine($"    void {methodName}()");
        sb.AppendLine("    {");
        sb.AppendLine($"        Debug.Log(\"{debugLogMessage}\");");
        sb.AppendLine("    }");
        return sb.ToString();
    }

    public static string GetEventMethodCode(string methodName, string eventTypeName, string debugLogMessage)
    {
        var sb = new StringBuilder();
        sb.AppendLine($"    void {methodName}({eventTypeName} evt)");
        sb.AppendLine("    {");
        sb.AppendLine($"        Debug.Log(\"{debugLogMessage}\");");
        sb.AppendLine("    }");
        return sb.ToString();
    }

    public static string GetRegisterClickedCode(string visualElementName, string callbackName)
    {
        return $"    rootVisualElement.Q<Button>(\"{visualElementName}\").clicked += {callbackName};";
    }

    public static string GetRegisterCallbackCode(CodeGenDescription desc, string visualElementName)
    {
        return $"    rootVisualElement.Q<VisualElement>(\"{visualElementName}\").RegisterCallback<{desc.EventTypeName}>({desc.CallbackMethodName});";
    }

    public static string GetStubbedCodeAtSecondLastIndexOfBlacket(string allScript, string stubCode)
    {
        // 最後の } の一個手前の} の位置をとる。
        var lastIndex = allScript.LastIndexOf("}");
        var firstText = allScript.Substring(0, lastIndex);
        lastIndex = firstText.LastIndexOf("}");
        firstText = firstText.Substring(0, lastIndex);
        var restLength = allScript.Length - lastIndex;

        var sb = new StringBuilder();
        sb.Append(firstText);
        var line = sb.ToString().Split('\n').Length;
        sb.AppendLine(stubCode);
        sb.AppendLine("    }");
        sb.AppendLine("}");
        return sb.ToString();
    }

    public static string GetStubbedCodeAtLastIndexOfBlacket(string allScript, string stubCode)
    {
        // 最後の } の一個手前の} の位置をとる。
        var lastIndex = allScript.LastIndexOf("}");
        var firstText = allScript.Substring(0, lastIndex);

        var sb = new StringBuilder();
        sb.Append(firstText);
        var line = sb.ToString().Split('\n').Length;
        sb.AppendLine(stubCode);
        sb.AppendLine("}");
        return sb.ToString();
    }
}