using UnityEditor;
using UnityEngine;
using UnityEngine.UIElements;
using UnityEditor.UIElements;

public partial class ExampleWindow : EditorWindow
{
    [MenuItem("Window/ExampleWindow")]
    static void Init()
    {
        GetWindow<ExampleWindow>(typeof(SceneView));
    }

    void OnEnable()
    {
        var container = new VisualElement();
        container.style.flexDirection = FlexDirection.Row;
        var button1 = new Button(() => Debug.Log("button1"))
        { name = "button1", text = "button1" };
        var button2 = new Button(() => Debug.Log("button2"))
        { name = "button2", text = "button2" };

        container.Add(button1);
        container.Add(button2);
        rootVisualElement.Add(container);
    }

    void ShowWarning()
    {
        var content = new GUIContent(string.Empty, EditorGUIUtility.FindTexture("console.warnicon"));
        content.text = "Message";
        ShowNotification(content, fadeoutWait: 5);
    }
}

//AUTOGENERATED
public partial class ExampleWindow
{
    void RegisterCallbacks()
    {
        rootVisualElement.Q<Button>("button1").clicked += OnClick_button1;
    }
}

public partial class ExampleWindow
{
    void OnClick_button1()
    {

        // rootVisualElement.Q<VisualElement>("button1").RegisterCallback<>.clicked += OnClick_button1;
    }

    void OnMouseDownEvent_button1(MouseDownEvent evt) { }

}